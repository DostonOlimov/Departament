<?php

use yii\db\Migration;

/**
 * Class m231003_050528_alter_table_unit_of_measure
 * 
 * lINK TO THE DATA 
 * https://download.hl7.de/documents/ucum/ucumdata.html
 * 
 * LINK TO THE FILE DOWNLOADED
 * https://download.hl7.de/documents/ucum/concepts.tsv
 */
class m231003_050528_alter_table_unit_of_measure extends Migration
{
    const TABLE_NAME = 'unit_of_measure'; // set the current table name
    const COL_1 = 'gov_control_program_id';
    const COL_2 = 'program_data_id';
    
    const COL_3 = 'code';
    const COL_4 = 'synonym';
    const COL_5 = 'kind_of_quantity';
    const COL_6 = 'concept_eng';
    const COL_7 = 'dimension';
    const COL_8 = 'status';

    const COL_9 =  'created_at';
    const COL_10 = 'updated_at';
    const COL_11 = 'created_by';
    const COL_12 = 'updated_by';

    
    const FTABLE_NAME_1 = 'gov_control_program'; // set the current table name
    const FTABLE_NAME_2 = 'program_data'; // set the current table name
    /**
     * {@inheritdoc}
     */
    public function safeUp()
    {
        // drop
        $this->dropForeignKey('fkey-'.self::TABLE_NAME.'-'.self::COL_1, '{{%'.self::TABLE_NAME.'}}');
        $this->dropIndex('index-'.self::TABLE_NAME.'-'.self::COL_1, '{{%'.self::TABLE_NAME.'}}');
        $this->dropColumn('{{%'.self::TABLE_NAME.'}}', self::COL_1);
        // drop
        $this->dropForeignKey('fkey-'.self::TABLE_NAME.'-'.self::COL_2, '{{%'.self::TABLE_NAME.'}}');
        $this->dropIndex('index-'.self::TABLE_NAME.'-'.self::COL_2, '{{%'.self::TABLE_NAME.'}}');
        $this->dropColumn('{{%'.self::TABLE_NAME.'}}', self::COL_2);
        
        //add
        $this->addColumn('{{%'.self::TABLE_NAME.'}}', self::COL_8, $this->integer()->after('id'));
        $this->addColumn('{{%'.self::TABLE_NAME.'}}', self::COL_7, $this->string()->after('id'));
        $this->addColumn('{{%'.self::TABLE_NAME.'}}', self::COL_6, $this->string()->after('id'));
        $this->addColumn('{{%'.self::TABLE_NAME.'}}', self::COL_5, $this->integer()->after('id'));
        $this->addColumn('{{%'.self::TABLE_NAME.'}}', self::COL_4, $this->string()->after('id'));
        $this->addColumn('{{%'.self::TABLE_NAME.'}}', self::COL_3, $this->string()->after('id'));

        /**
         * lINK TO THE DATA 
         * https://download.hl7.de/documents/ucum/ucumdata.html
         * 
         * LINK TO THE FILE DOWNLOADED
         * https://download.hl7.de/documents/ucum/concepts.tsv
         */
        //fill with data
        $this->insert(self::TABLE_NAME, [ "code" => "%", "synonym" => "%", "kind_of_quantity" => 1, "concept_eng" => "Percent", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/uL", "synonym" => "/uL", "kind_of_quantity" => 1, "concept_eng" => "PerMicroLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[iU]/L", "synonym" => "IU/L", "kind_of_quantity" => 1, "concept_eng" => "InternationalUnitsPerLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*3/uL", "synonym" => "K/uL, x10^3/mm^3", "kind_of_quantity" => 1, "concept_eng" => "ThousandsPerMicroLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*6/uL", "synonym" => "M/uL, x10^6/mm^3", "kind_of_quantity" => 1, "concept_eng" => "MillionsPerMicroLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "fL", "synonym" => "fL", "kind_of_quantity" => 1, "concept_eng" => "FemtoLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/dL", "synonym" => "g/dL", "kind_of_quantity" => 1, "concept_eng" => "GramsPerDeciLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/L", "synonym" => "g/L", "kind_of_quantity" => 1, "concept_eng" => "GramsPerLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/mL", "synonym" => "g/mL", "kind_of_quantity" => 1, "concept_eng" => "GramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kPa", "synonym" => "kPa", "kind_of_quantity" => 1, "concept_eng" => "KiloPascal", "dimension" => "L-1MT-2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "m[iU]/mL", "synonym" => "mIU/mL", "kind_of_quantity" => 1, "concept_eng" => "MilliInternationalUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/L", "synonym" => "mEq/L", "kind_of_quantity" => 1, "concept_eng" => "MilliEquivalentsPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/dL", "synonym" => "mg/dL", "kind_of_quantity" => 1, "concept_eng" => "MilliGramsPerDeciLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mm[Hg]", "synonym" => "mm Hg", "kind_of_quantity" => 1, "concept_eng" => "MilliMetersOfMercury", "dimension" => "L-1MT-2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/kg", "synonym" => "mmol/kg", "kind_of_quantity" => 1, "concept_eng" => "MilliMolesPerKiloGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/L", "synonym" => "mmol/L", "kind_of_quantity" => 1, "concept_eng" => "MilliMolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mosm/kg", "synonym" => "mOsm/kg", "kind_of_quantity" => 1, "concept_eng" => "MilliOsmolesPerKiloGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/mL", "synonym" => "ng/mL", "kind_of_quantity" => 1, "concept_eng" => "NanoGramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/L", "synonym" => "nmol/L", "kind_of_quantity" => 1, "concept_eng" => "NanoMolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pg", "synonym" => "pg", "kind_of_quantity" => 1, "concept_eng" => "PicoGrams", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pg/mL", "synonym" => "pg/mL", "kind_of_quantity" => 1, "concept_eng" => "PicoGramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pmol/L", "synonym" => "pmol/L", "kind_of_quantity" => 1, "concept_eng" => "PicoMolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "U/L", "synonym" => "U/L", "kind_of_quantity" => 1, "concept_eng" => "UnitsPerLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "u[iU]/mL", "synonym" => "uIU/mL", "kind_of_quantity" => 1, "concept_eng" => "MicroInternationalUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/dL", "synonym" => "ug/dL", "kind_of_quantity" => 1, "concept_eng" => "MicroGramsPerDeciLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/L", "synonym" => "ug/L", "kind_of_quantity" => 1, "concept_eng" => "MicroGramsPerLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/mL", "synonym" => "ug/mL", "kind_of_quantity" => 1, "concept_eng" => "MicroGramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/L", "synonym" => "umol/L", "kind_of_quantity" => 1, "concept_eng" => "MicroMolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[lg]", "synonym" => "log 10", "kind_of_quantity" => 2, "concept_eng" => "Log10", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*6/{Specimen}", "synonym" => "x10^6/spec", "kind_of_quantity" => 2, "concept_eng" => "MillionPerSpecimen", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/{tot}", "synonym" => "/Total", "kind_of_quantity" => 2, "concept_eng" => "PerTotalCount", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*3", "synonym" => "x10^3", "kind_of_quantity" => 2, "concept_eng" => "Thousand", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*3.{RBC}", "synonym" => "x10^3 RBCs", "kind_of_quantity" => 2, "concept_eng" => "ThousandRedBloodCells", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*5", "synonym" => "x10^5", "kind_of_quantity" => 2, "concept_eng" => "OneHundredThousand", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*6", "synonym" => "x10^6", "kind_of_quantity" => 2, "concept_eng" => "Million", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*8", "synonym" => "x10^8", "kind_of_quantity" => 2, "concept_eng" => "TenToEighth", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%", "synonym" => "%", "kind_of_quantity" => 3, "concept_eng" => "Percent", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{Relative}%", "synonym" => "Relative %", "kind_of_quantity" => 3, "concept_eng" => "RelativePercent", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Total}", "synonym" => "% of Total", "kind_of_quantity" => 3, "concept_eng" => "PercentTotal", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{0to3Hours}", "synonym" => "% 0-3 h", "kind_of_quantity" => 3, "concept_eng" => "Percent0to3Hours", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/10*10", "synonym" => "/10^10", "kind_of_quantity" => 4, "concept_eng" => "PerTenGiga", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/10*6", "synonym" => "/10^6", "kind_of_quantity" => 4, "concept_eng" => "PerMillion", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/10*9", "synonym" => "/10^9", "kind_of_quantity" => 4, "concept_eng" => "PerBillion", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/10*12", "synonym" => "/10^12", "kind_of_quantity" => 4, "concept_eng" => "PerTrillion", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Normal}", "synonym" => "% Normal", "kind_of_quantity" => 4, "concept_eng" => "PercentNormal", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{SpermMotility}", "synonym" => "% Sperm Motility", "kind_of_quantity" => 4, "concept_eng" => "PercentSpermMotility", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Positive}", "synonym" => "% Positive", "kind_of_quantity" => 4, "concept_eng" => "PercentPositive", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{FetalErythrocytes}", "synonym" => "% Fetal RBC", "kind_of_quantity" => 4, "concept_eng" => "PercentFetalErythrocytes", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{OfLymphocytes}", "synonym" => "% Lymphs", "kind_of_quantity" => 4, "concept_eng" => "PercentOfLymphocytes", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{ofBacteria}", "synonym" => "% Bacteria", "kind_of_quantity" => 4, "concept_eng" => "PercentofBacteria", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{OfWBCs}", "synonym" => "% WBCs", "kind_of_quantity" => 4, "concept_eng" => "PercentOfWBCs", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Abnormal}", "synonym" => "% Abnormal", "kind_of_quantity" => 4, "concept_eng" => "PercentAbnormal", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{EosSeen}", "synonym" => "% EOS Seen", "kind_of_quantity" => 4, "concept_eng" => "PercentEosinophilsSeen", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Hemolysis}", "synonym" => "% Hemolysis", "kind_of_quantity" => 4, "concept_eng" => "PercentHemolysis", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Blockade}", "synonym" => "% Blockade", "kind_of_quantity" => 4, "concept_eng" => "PercentBlockade", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%/100{WBC}", "synonym" => "% per 100 WBC", "kind_of_quantity" => 4, "concept_eng" => "PercentPer100WBC", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Binding}", "synonym" => "% Binding", "kind_of_quantity" => 5, "concept_eng" => "PercentBinding", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{TotalProtein}", "synonym" => "% Total Protein", "kind_of_quantity" => 5, "concept_eng" => "PercentTotalProtein", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Bound}", "synonym" => "% Bound", "kind_of_quantity" => 5, "concept_eng" => "PercentBound", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Hemoglobin}", "synonym" => "% Hgb", "kind_of_quantity" => 5, "concept_eng" => "PercentHemoglobin", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{HemoglobinSaturation}", "synonym" => "% Hgb SAT", "kind_of_quantity" => 5, "concept_eng" => "PercentHemoglobinSaturation", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Carboxyhemoglobin}", "synonym" => "% CO Hgb", "kind_of_quantity" => 5, "concept_eng" => "PercentCarboxyhemoglobin", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{HemoglobinA1C}", "synonym" => "% Hgb A1C", "kind_of_quantity" => 5, "concept_eng" => "PercentHemoglobinA1C", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Excretion}", "synonym" => "% Excretion", "kind_of_quantity" => 6, "concept_eng" => "PercentExcretion", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Uptake}", "synonym" => "% Uptake", "kind_of_quantity" => 6, "concept_eng" => "PercentUptake", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/ng", "synonym" => "ug/ng", "kind_of_quantity" => 7, "concept_eng" => "MicroGramsPerNanoGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/mg", "synonym" => "ng/mg", "kind_of_quantity" => 7, "concept_eng" => "NanoGramsPerMilliGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/mg{Protein}", "synonym" => "ng/mg Prot", "kind_of_quantity" => 7, "concept_eng" => "NanoGramsPerMilliGramProtein", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/mg", "synonym" => "ug/mg", "kind_of_quantity" => 7, "concept_eng" => "MicroGramsPerMilliGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/mg{Cre}", "synonym" => "ug/mg Cre", "kind_of_quantity" => 7, "concept_eng" => "MicroGramsPerMilliGramCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/mg", "synonym" => "mg/mg", "kind_of_quantity" => 7, "concept_eng" => "MilliGramsPerMilliGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/mg{Cre}", "synonym" => "mg/mg Cre", "kind_of_quantity" => 7, "concept_eng" => "MilligramsPerMilligramCreatinine", "dimension" => "", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/g", "synonym" => "ng/g", "kind_of_quantity" => 7, "concept_eng" => "NanoGramsPerGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/g{Cre}", "synonym" => "ng/g Cre", "kind_of_quantity" => 7, "concept_eng" => "NanoGramsPerGramCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/g", "synonym" => "ug/g", "kind_of_quantity" => 7, "concept_eng" => "MicroGramsPerGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/[100]g", "synonym" => "ug/100 g", "kind_of_quantity" => 7, "concept_eng" => "MicroGramPer100Gram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/g{DryWeight}", "synonym" => "ug/g Dry Weight", "kind_of_quantity" => 7, "concept_eng" => "MicroGramPerGramDryWeight", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/g{Cre}", "synonym" => "ug/g Cre", "kind_of_quantity" => 7, "concept_eng" => "MicroGramPerGramCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/g{Hgb}", "synonym" => "ug/g Hgb", "kind_of_quantity" => 7, "concept_eng" => "MicroGramsPerGramHemoglobin", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/g", "synonym" => "mg/g", "kind_of_quantity" => 7, "concept_eng" => "MilliGramsPerGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/g{Cre}", "synonym" => "mg/g Cre", "kind_of_quantity" => 7, "concept_eng" => "MilliGramPerGramCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/g", "synonym" => "g/g", "kind_of_quantity" => 7, "concept_eng" => "GramsPerGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/kg", "synonym" => "ng/kg", "kind_of_quantity" => 7, "concept_eng" => "NanoGramsPerKiloGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/kg", "synonym" => "ug/kg", "kind_of_quantity" => 7, "concept_eng" => "MicroGramsPerKiloGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/kg", "synonym" => "mg/kg", "kind_of_quantity" => 7, "concept_eng" => "MilliGramsPerKiloGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/kg", "synonym" => "g/kg", "kind_of_quantity" => 7, "concept_eng" => "GramsPerKiloGram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/[100]g", "synonym" => "g/100g", "kind_of_quantity" => 7, "concept_eng" => "GramsPer100Gram", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/g{Cre}", "synonym" => "g/g Cre", "kind_of_quantity" => 7, "concept_eng" => "GramsPerGramCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pmol/umol", "synonym" => "pmol/umol", "kind_of_quantity" => 8, "concept_eng" => "PicoMolesPerMicroMole", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/mmol", "synonym" => "nmol/mmol", "kind_of_quantity" => 8, "concept_eng" => "NanoMolesPerMilliMole", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/mmol{Cre}", "synonym" => "nmol/mmol Cre", "kind_of_quantity" => 8, "concept_eng" => "NanoMolesPerMilliMoleCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/mol", "synonym" => "nmol/mol", "kind_of_quantity" => 8, "concept_eng" => "NanoMolesPerMole", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/mol", "synonym" => "umol/mol", "kind_of_quantity" => 8, "concept_eng" => "MicroMolesPerMole", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/mol", "synonym" => "mmol/mol", "kind_of_quantity" => 8, "concept_eng" => "MilliMolesPerMole", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/mol{Cre}", "synonym" => "mmol/mol Cre", "kind_of_quantity" => 8, "concept_eng" => "MilliMolesPerMoleCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/mol{Cre}", "synonym" => "umol/mol Cre", "kind_of_quantity" => 8, "concept_eng" => "MicroMolesPerMoleCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "eq/umol", "synonym" => "eq/umol", "kind_of_quantity" => 8, "concept_eng" => "EquivalentsPerMicroMole", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "eq/mmol", "synonym" => "eq/mmol", "kind_of_quantity" => 8, "concept_eng" => "EquivalentsPerMilliMole", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{BoneCollagen}eq/mmol{Cre}", "synonym" => "BCE/mmol Cre", "kind_of_quantity" => 8, "concept_eng" => "BoneCollagenEquivalentsPerMilliMoleCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{BoneCollagen}eq/umol{Cre}", "synonym" => "BCE/umol Cre", "kind_of_quantity" => 8, "concept_eng" => "BoneCollagenEquivalentsPerMicroMoleCreatinine", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{vol}", "synonym" => "Volume %", "kind_of_quantity" => 9, "concept_eng" => "VolumePercent", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Oxygen}", "synonym" => "% Oxygen", "kind_of_quantity" => 9, "concept_eng" => "PercentOxygen", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mL/dL", "synonym" => "cc/dL", "kind_of_quantity" => 9, "concept_eng" => "MilliLitersPerDeciLiter", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{NormalPooledPlasma}", "synonym" => "% Normal Pooled Plasma", "kind_of_quantity" => 10, "concept_eng" => "PercentNormalPooledPlasma", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Activity}", "synonym" => "% Activity", "kind_of_quantity" => 10, "concept_eng" => "PercentActivity", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{BasalActivity}", "synonym" => "% Basal Activity", "kind_of_quantity" => 10, "concept_eng" => "PercentBasalActivity", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "%{Inhibition}", "synonym" => "% Inhibition", "kind_of_quantity" => 10, "concept_eng" => "PercentInhibition", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/{Entity}", "synonym" => "/Entity", "kind_of_quantity" => 11, "concept_eng" => "PerEntity", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/100{WBC}", "synonym" => "/100 WBCs", "kind_of_quantity" => 11, "concept_eng" => "Per100WBC", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/100", "synonym" => "/100", "kind_of_quantity" => 11, "concept_eng" => "Per100", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/100{Spermatozoa}", "synonym" => "/100 Sperm", "kind_of_quantity" => 11, "concept_eng" => "Per100Spermatozoa", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/10*12{rbc}", "synonym" => "/10^12 RBCs", "kind_of_quantity" => 11, "concept_eng" => "PerTrillionRedBloodCells", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "deg", "synonym" => "Deg", "kind_of_quantity" => 12, "concept_eng" => "DegreesOfArc", "dimension" => "1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/[arb`U]", "synonym" => "/Arbitrary Unit", "kind_of_quantity" => 13, "concept_eng" => "PerArbitraryUnit", "dimension" => "[arb]-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "u[iU]", "synonym" => "uIU", "kind_of_quantity" => 14, "concept_eng" => "MicroInternationalUnit", "dimension" => "[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[iU]", "synonym" => "IU", "kind_of_quantity" => 14, "concept_eng" => "InternationalUnit", "dimension" => "[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*6.[iU]", "synonym" => "10^6  IU", "kind_of_quantity" => 14, "concept_eng" => "MillionInternationalUnit", "dimension" => "[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[in_i]", "synonym" => "in", "kind_of_quantity" => 15, "concept_eng" => "Inch", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[ft_i]", "synonym" => "ft", "kind_of_quantity" => 15, "concept_eng" => "Feet", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[yd_i]", "synonym" => "yd", "kind_of_quantity" => 15, "concept_eng" => "Yard", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[fth_i]", "synonym" => "fathom", "kind_of_quantity" => 15, "concept_eng" => "Fathom", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[mi_i]", "synonym" => "mi", "kind_of_quantity" => 15, "concept_eng" => "StatuteMile", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[nmi_i]", "synonym" => "n mile", "kind_of_quantity" => 15, "concept_eng" => "NauticalMile", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[Ch]", "synonym" => "French Unit", "kind_of_quantity" => 15, "concept_eng" => "French", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "fm", "synonym" => "fm", "kind_of_quantity" => 16, "concept_eng" => "FemtoMeter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pm", "synonym" => "pm", "kind_of_quantity" => 16, "concept_eng" => "PicoMeter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nm", "synonym" => "nm", "kind_of_quantity" => 16, "concept_eng" => "NanoMeter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "um", "synonym" => "um", "kind_of_quantity" => 16, "concept_eng" => "MicroMeter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mm", "synonym" => "mm", "kind_of_quantity" => 16, "concept_eng" => "MilliMeter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "cm", "synonym" => "cm", "kind_of_quantity" => 16, "concept_eng" => "CentiMeter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "dm", "synonym" => "dm", "kind_of_quantity" => 16, "concept_eng" => "DeciMeter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "m", "synonym" => "m", "kind_of_quantity" => 16, "concept_eng" => "Meter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "km", "synonym" => "km", "kind_of_quantity" => 16, "concept_eng" => "KiloMeter", "dimension" => "L", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[gr]", "synonym" => "gr", "kind_of_quantity" => 17, "concept_eng" => "Grain", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[oz_av]", "synonym" => "oz", "kind_of_quantity" => 17, "concept_eng" => "Ounce", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[oz_tr]", "synonym" => "tr oz", "kind_of_quantity" => 17, "concept_eng" => "TroyOunce", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[lb_av]", "synonym" => "lb", "kind_of_quantity" => 17, "concept_eng" => "Pound", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[ston_av]", "synonym" => "Ton", "kind_of_quantity" => 17, "concept_eng" => "Ton", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[dr_av]", "synonym" => "dr", "kind_of_quantity" => 17, "concept_eng" => "Dram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "fg", "synonym" => "fg", "kind_of_quantity" => 18, "concept_eng" => "FemtoGram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pg", "synonym" => "pg", "kind_of_quantity" => 18, "concept_eng" => "PicoGram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng", "synonym" => "ng", "kind_of_quantity" => 18, "concept_eng" => "NanoGram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug", "synonym" => "ug", "kind_of_quantity" => 18, "concept_eng" => "MicroGram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/{TotalVolume}", "synonym" => "ug/Total Volume", "kind_of_quantity" => 18, "concept_eng" => "MicroGramsPerTotalVolume", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/{Specimen}", "synonym" => "ug/Spec", "kind_of_quantity" => 18, "concept_eng" => "MicroGramsPerSpecimen", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg", "synonym" => "mg", "kind_of_quantity" => 18, "concept_eng" => "MilliGram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/{Volume}", "synonym" => "mg/Volume", "kind_of_quantity" => 18, "concept_eng" => "MilliGramsPerVolume", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/{TotalVolume}", "synonym" => "mg/Total Volume", "kind_of_quantity" => 18, "concept_eng" => "MilliGramPerTotalVolume", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g", "synonym" => "g", "kind_of_quantity" => 18, "concept_eng" => "Gram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/{TotalWeight}", "synonym" => "g/Total Weight", "kind_of_quantity" => 18, "concept_eng" => "GramsPerTotalWeight", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "dg", "synonym" => "dg", "kind_of_quantity" => 18, "concept_eng" => "DeciGram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "cg", "synonym" => "cg", "kind_of_quantity" => 18, "concept_eng" => "CentiGram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kg", "synonym" => "kg", "kind_of_quantity" => 18, "concept_eng" => "KiloGram", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "t", "synonym" => "Metric Ton", "kind_of_quantity" => 18, "concept_eng" => "MetricTon", "dimension" => "M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pg/mm", "synonym" => "pg/mm", "kind_of_quantity" => 19, "concept_eng" => "PicoGramsPerMilliMeter", "dimension" => "L-1M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "K", "synonym" => "K", "kind_of_quantity" => 20, "concept_eng" => "DegreesKelvin", "dimension" => "q", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "Cel", "synonym" => "C", "kind_of_quantity" => 20, "concept_eng" => "DegreesCelsius", "dimension" => "q", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[degF]", "synonym" => "F", "kind_of_quantity" => 20, "concept_eng" => "DegreesFahrenheit", "dimension" => "q", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "K/W", "synonym" => "K/Watt", "kind_of_quantity" => 21, "concept_eng" => "KelvinPerWatt", "dimension" => "L-2M-1T3q", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ps", "synonym" => "ps", "kind_of_quantity" => 22, "concept_eng" => "PicoSecond", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ns", "synonym" => "ns", "kind_of_quantity" => 22, "concept_eng" => "NanoSecond", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "us", "synonym" => "us", "kind_of_quantity" => 22, "concept_eng" => "MicroSecond", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ms", "synonym" => "ms", "kind_of_quantity" => 22, "concept_eng" => "MilliSecond", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "s", "synonym" => "sec", "kind_of_quantity" => 22, "concept_eng" => "Second", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ks", "synonym" => "ks", "kind_of_quantity" => 22, "concept_eng" => "KiloSecond", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "Ms", "synonym" => "Ms", "kind_of_quantity" => 22, "concept_eng" => "Megasecond", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "min", "synonym" => "min", "kind_of_quantity" => 22, "concept_eng" => "Minute", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "h", "synonym" => "h", "kind_of_quantity" => 22, "concept_eng" => "Hour", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "d", "synonym" => "d", "kind_of_quantity" => 22, "concept_eng" => "Day", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "wk", "synonym" => "wk", "kind_of_quantity" => 22, "concept_eng" => "Week", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mo", "synonym" => "Mo", "kind_of_quantity" => 22, "concept_eng" => "Month", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "a", "synonym" => "yr", "kind_of_quantity" => 22, "concept_eng" => "Year", "dimension" => "T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "eq", "synonym" => "eq", "kind_of_quantity" => 23, "concept_eng" => "Equivalent", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ueq", "synonym" => "ueq", "kind_of_quantity" => 23, "concept_eng" => "MicroEquivalent", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq", "synonym" => "meq", "kind_of_quantity" => 23, "concept_eng" => "MilliEquivalent", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/{Specimen}", "synonym" => "meq/Spec", "kind_of_quantity" => 23, "concept_eng" => "MilliEquivalentsPerSpecimen", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mol", "synonym" => "mol", "kind_of_quantity" => 23, "concept_eng" => "Mole", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol", "synonym" => "mmol", "kind_of_quantity" => 23, "concept_eng" => "MilliMole", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/{TotalVolume}", "synonym" => "mmol/Total Volume", "kind_of_quantity" => 23, "concept_eng" => "MilliMolesPerTotalVolume", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "fmol", "synonym" => "fmol", "kind_of_quantity" => 23, "concept_eng" => "Femtomole", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pmol", "synonym" => "pmol", "kind_of_quantity" => 23, "concept_eng" => "PicoMole", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol", "synonym" => "umol", "kind_of_quantity" => 23, "concept_eng" => "MicroMole", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol", "synonym" => "nmol", "kind_of_quantity" => 23, "concept_eng" => "NanoMole", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mosm", "synonym" => "mosm", "kind_of_quantity" => 23, "concept_eng" => "MilliOsmole", "dimension" => "N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/m2", "synonym" => "meg/m^2", "kind_of_quantity" => 24, "concept_eng" => "MilliEquivalentsPerSquareMeter", "dimension" => "L-2N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/m2", "synonym" => "mmol/m^2", "kind_of_quantity" => 24, "concept_eng" => "MilliMolesPerSquareMeter", "dimension" => "L-2N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[sin_i]", "synonym" => "in^2", "kind_of_quantity" => 25, "concept_eng" => "SquareInch", "dimension" => "L2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[sft_i]", "synonym" => "ft^2", "kind_of_quantity" => 25, "concept_eng" => "SquareFeet", "dimension" => "L2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[syd_i]", "synonym" => "yd^2", "kind_of_quantity" => 25, "concept_eng" => "SquareYard", "dimension" => "L2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mm2", "synonym" => "mm^2", "kind_of_quantity" => 26, "concept_eng" => "SquareMilliMeter", "dimension" => "L2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "cm2", "synonym" => "cm^2", "kind_of_quantity" => 26, "concept_eng" => "SquareCentiMeter", "dimension" => "L2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "m2", "synonym" => "m^2", "kind_of_quantity" => 26, "concept_eng" => "SquareMeter", "dimension" => "L2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[foz_us]", "synonym" => "fl oz", "kind_of_quantity" => 27, "concept_eng" => "FluidOunce", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[cin_i]", "synonym" => "in^3", "kind_of_quantity" => 27, "concept_eng" => "CubicInch", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[cup_us]", "synonym" => "Cup", "kind_of_quantity" => 27, "concept_eng" => "Cup", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[pt_us]", "synonym" => "pt", "kind_of_quantity" => 27, "concept_eng" => "Pint", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[qt_us]", "synonym" => "qt", "kind_of_quantity" => 27, "concept_eng" => "Quart", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[gal_us]", "synonym" => "gal", "kind_of_quantity" => 27, "concept_eng" => "Gallon", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[fdr_us]", "synonym" => "fl dr", "kind_of_quantity" => 27, "concept_eng" => "FluidDram", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "fL", "synonym" => "fL", "kind_of_quantity" => 28, "concept_eng" => "FemtoLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pL", "synonym" => "pL", "kind_of_quantity" => 28, "concept_eng" => "PicoLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nL", "synonym" => "nL", "kind_of_quantity" => 28, "concept_eng" => "NanoLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "uL", "synonym" => "uL", "kind_of_quantity" => 28, "concept_eng" => "MicroLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mL", "synonym" => "mL", "kind_of_quantity" => 28, "concept_eng" => "MilliLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mL/{h`b}", "synonym" => "mL/heart beat", "kind_of_quantity" => 28, "concept_eng" => "MilliLitersPerHeartbeat", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "L", "synonym" => "L", "kind_of_quantity" => 28, "concept_eng" => "Liter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "dL", "synonym" => "dL", "kind_of_quantity" => 28, "concept_eng" => "DeciLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "cL", "synonym" => "cL", "kind_of_quantity" => 28, "concept_eng" => "CentiLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kL", "synonym" => "kL", "kind_of_quantity" => 28, "concept_eng" => "KiloLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "hL", "synonym" => "hL", "kind_of_quantity" => 28, "concept_eng" => "HectoLiter", "dimension" => "L3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "L.s2/s", "synonym" => "L s^2/s", "kind_of_quantity" => 29, "concept_eng" => "LiterSquareSecondPerSecond", "dimension" => "L3T", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/mg", "synonym" => "mg", "kind_of_quantity" => 30, "concept_eng" => "PerMilliGram", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/g", "synonym" => "/g", "kind_of_quantity" => 30, "concept_eng" => "PerGram", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/g{creat}", "synonym" => "/g Cre", "kind_of_quantity" => 30, "concept_eng" => "PerGramCreatinine", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/g{HGB}", "synonym" => "/g Hgb", "kind_of_quantity" => 30, "concept_eng" => "PerGramHemoglobin", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/g{tot`nit}", "synonym" => "/g Total Nitrogen", "kind_of_quantity" => 30, "concept_eng" => "PerGramTotalNitrogen", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/g{tot`prot}", "synonym" => "/g Total Protein", "kind_of_quantity" => 30, "concept_eng" => "PerGramTotalProtein", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/g{wet`tis}", "synonym" => "/g Wet Tissue", "kind_of_quantity" => 30, "concept_eng" => "PerGramWetTissue", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/kg", "synonym" => "/kg", "kind_of_quantity" => 30, "concept_eng" => "PerKiloGram", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/kg{body`wt}", "synonym" => "/kg Body Weight", "kind_of_quantity" => 30, "concept_eng" => "PerKiloGramBodyWeight", "dimension" => "M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "fmol/mg", "synonym" => "fmol/mg", "kind_of_quantity" => 31, "concept_eng" => "FemtoMolesPerMilliGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/mg", "synonym" => "nmol/mg", "kind_of_quantity" => 31, "concept_eng" => "NanoMolesPerMilliGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/mg", "synonym" => "umol/mg", "kind_of_quantity" => 31, "concept_eng" => "MicroMolesPerMilliGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/mg{Cre}", "synonym" => "umol/mg Cre", "kind_of_quantity" => 31, "concept_eng" => "MicroMolesPerMilliGramCreatinine", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mol/kg", "synonym" => "mol/kg", "kind_of_quantity" => 31, "concept_eng" => "MolesPerKiloGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "fmol/g", "synonym" => "fmol/gm", "kind_of_quantity" => 31, "concept_eng" => "FemtoMolesPerGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/g", "synonym" => "nmol/g", "kind_of_quantity" => 31, "concept_eng" => "NanoMolesPerGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/g{Cre}", "synonym" => "nmol/g Cre", "kind_of_quantity" => 31, "concept_eng" => "NanoMolesPerGramCreatinine", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/g", "synonym" => "umol/g", "kind_of_quantity" => 31, "concept_eng" => "MicroMolesPerGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/g{Cre}", "synonym" => "umol/g Cre", "kind_of_quantity" => 31, "concept_eng" => "MicroMolesPerGramCreatinine", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/g{Hgb}", "synonym" => "umol/g Hgb", "kind_of_quantity" => 31, "concept_eng" => "MicroMolesPerGramHemoglobin", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/g", "synonym" => "mmol/g", "kind_of_quantity" => 31, "concept_eng" => "MilliMolesPerGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/kg", "synonym" => "mmol/kg", "kind_of_quantity" => 31, "concept_eng" => "MilliMolesPerKiloGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "osm/kg", "synonym" => "Osm/kg", "kind_of_quantity" => 31, "concept_eng" => "OsmolesPerKiloGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mosm/kg", "synonym" => "mosm/kg", "kind_of_quantity" => 32, "concept_eng" => "MilliOsmolesPerKiloGram", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/g", "synonym" => "meq/g", "kind_of_quantity" => 31, "concept_eng" => "MilliEquivalentsPerGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/g{Cre}", "synonym" => "meq/g Cre", "kind_of_quantity" => 31, "concept_eng" => "MilliEquivalentsPerGramCreatinine", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/kg", "synonym" => "meq/kg", "kind_of_quantity" => 31, "concept_eng" => "MilliEquivalentsPerKiloGram", "dimension" => "M-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[iU]/g", "synonym" => "IU/g", "kind_of_quantity" => 33, "concept_eng" => "InternationalUnitsPerGram", "dimension" => "M-1[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[iU]/g{Hgb}", "synonym" => "IU/g Hgb", "kind_of_quantity" => 33, "concept_eng" => "InternationalUnitsPerGramHemoglobin", "dimension" => "M-1[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{Ehrlich_U}/100g", "synonym" => "EU/100 g", "kind_of_quantity" => 33, "concept_eng" => "EhrlichUnitsPer100Gram", "dimension" => "M-1[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[iU]/kg", "synonym" => "IU/kg", "kind_of_quantity" => 33, "concept_eng" => "InternationalUnitsPerKilogram", "dimension" => "M-1[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/min/g", "synonym" => "umol/min/g", "kind_of_quantity" => 32, "concept_eng" => "MicroMolesPerMinutePerGram", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mU/g", "synonym" => "mU/g", "kind_of_quantity" => 32, "concept_eng" => "MilliUnitsPerGram", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mU/g{Hgb}", "synonym" => "mU/g Hgb", "kind_of_quantity" => 32, "concept_eng" => "MilliUnitsPerGramHemoglobin", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "U/g", "synonym" => "U/g", "kind_of_quantity" => 32, "concept_eng" => "UnitsPerGram", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "U/g{Hgb}", "synonym" => "U/g Hgb", "kind_of_quantity" => 32, "concept_eng" => "UnitsPerGramHemoglobin", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "U/g{Cre}", "synonym" => "U/g Cre", "kind_of_quantity" => 32, "concept_eng" => "UnitsPerGramCreatinine", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mU/mg{Cre}", "synonym" => "mU/mg Cre", "kind_of_quantity" => 32, "concept_eng" => "MilliUnitsPerMilliGramCreatinine", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mU/mg", "synonym" => "mU/mg", "kind_of_quantity" => 32, "concept_eng" => "MilliUnitsPerMilligram", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kU/g", "synonym" => "kU/g", "kind_of_quantity" => 32, "concept_eng" => "KiloUnitsPerGram", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kat/kg", "synonym" => "kat/kg", "kind_of_quantity" => 32, "concept_eng" => "KatalPerKilogram", "dimension" => "M-1T-1N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mL/kg", "synonym" => "mL/kg", "kind_of_quantity" => 34, "concept_eng" => "MilliLitersPerKiloGram", "dimension" => "L3M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "L/kg", "synonym" => "L/kg", "kind_of_quantity" => 34, "concept_eng" => "LitersPerKilogram", "dimension" => "L3M-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kCal/[oz_av]", "synonym" => "kCal/oz", "kind_of_quantity" => 35, "concept_eng" => "KiloCaloriesPerOunce", "dimension" => "L2T-2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/m2", "synonym" => "/m^2", "kind_of_quantity" => 36, "concept_eng" => "PerSquareMeter", "dimension" => "L-2", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/m2", "synonym" => "g/m^2", "kind_of_quantity" => 37, "concept_eng" => "GramsPerSquareMeter", "dimension" => "L-2M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kg/m2", "synonym" => "kg/m^2", "kind_of_quantity" => 37, "concept_eng" => "KiloGramsPerSquareMeter", "dimension" => "L-2M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/m2", "synonym" => "ug/m^2", "kind_of_quantity" => 37, "concept_eng" => "MicroGramsPerSquareMeter", "dimension" => "L-2M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/m2", "synonym" => "mg/m^2", "kind_of_quantity" => 37, "concept_eng" => "MilliGramsPerSquareMeter", "dimension" => "L-2M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/m2", "synonym" => "ng/m^2", "kind_of_quantity" => 37, "concept_eng" => "NanoGramsPerSquareMeter", "dimension" => "L-2M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g.m", "synonym" => "Gram Meter", "kind_of_quantity" => 38, "concept_eng" => "GramMeter", "dimension" => "LM", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g.m/{hb}", "synonym" => "Gram Meter/Heartbeat", "kind_of_quantity" => 38, "concept_eng" => "GramMeterPerHeartbeat", "dimension" => "LM", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g.m/({hb}.m2)", "synonym" => "Gram Meter/Heartbeat/m^2", "kind_of_quantity" => 19, "concept_eng" => "GramMeterPerHeartbeatPerSquareMeter", "dimension" => "L-1M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kg/mol", "synonym" => "kg/mol", "kind_of_quantity" => 39, "concept_eng" => "KiloGramsPerMole", "dimension" => "MN-1", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/uL", "synonym" => "/mm^3", "kind_of_quantity" => 40, "concept_eng" => "PerMicroLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{Cells}/uL", "synonym" => "cells/uL", "kind_of_quantity" => 40, "concept_eng" => "CellsPerMicroLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{rbc}/uL", "synonym" => "RBC/mm^3", "kind_of_quantity" => 40, "concept_eng" => "RedBloodCellsPerMicroLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*3/uL", "synonym" => "10^3/uL", "kind_of_quantity" => 40, "concept_eng" => "ThousandsPerMicroLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*6/uL", "synonym" => "10^6/uL", "kind_of_quantity" => 40, "concept_eng" => "MillionsPerMicroLiter", "dimension" => "L-3", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*9/uL", "synonym" => "10^9/uL", "kind_of_quantity" => 40, "concept_eng" => "BillionsPerMicroLiter", "dimension" => "L-4", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/mL", "synonym" => "/mL", "kind_of_quantity" => 40, "concept_eng" => "PerMilliLiter", "dimension" => "L-5", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{Spermatozoa}/mL", "synonym" => "Sperm/mL", "kind_of_quantity" => 40, "concept_eng" => "SpermatozoaPerMilliLiter", "dimension" => "L-6", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{Copies}/mL", "synonym" => "Copies/mL", "kind_of_quantity" => 40, "concept_eng" => "CopiesPerMilliLiter", "dimension" => "L-7", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*3/mL", "synonym" => "10^3/mL", "kind_of_quantity" => 40, "concept_eng" => "ThousandPerMilliLiter", "dimension" => "L-8", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*3{Copies}/mL", "synonym" => "10^3 copies/mL", "kind_of_quantity" => 40, "concept_eng" => "ThousandCopiesPerMilliLiter", "dimension" => "L-9", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*6/mL", "synonym" => "10^6/mL", "kind_of_quantity" => 40, "concept_eng" => "MillionPerMilliLiter", "dimension" => "L-10", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*9/mL", "synonym" => "10^9/mL", "kind_of_quantity" => 40, "concept_eng" => "BillionsPerMilliliter", "dimension" => "L-11", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{cfu}/mL", "synonym" => "cfu/mL", "kind_of_quantity" => 40, "concept_eng" => "ColonyFormingUnitsPerMilliLiter", "dimension" => "L-12", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/dL", "synonym" => "/dL", "kind_of_quantity" => 40, "concept_eng" => "PerDeciLiter", "dimension" => "L-13", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "/L", "synonym" => "/L", "kind_of_quantity" => 40, "concept_eng" => "PerLiter", "dimension" => "L-14", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*3/L", "synonym" => "10^3/L", "kind_of_quantity" => 40, "concept_eng" => "ThousandPerLiter", "dimension" => "L-15", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*6/L", "synonym" => "10^6/L", "kind_of_quantity" => 40, "concept_eng" => "MillionPerLiter", "dimension" => "L-16", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*12/L", "synonym" => "10^12/L", "kind_of_quantity" => 40, "concept_eng" => "TrillionPerLiter", "dimension" => "L-17", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*9/L", "synonym" => "10^9/L", "kind_of_quantity" => 40, "concept_eng" => "BillionPerLiter", "dimension" => "L-18", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pg/mL", "synonym" => "pg/mL", "kind_of_quantity" => 41, "concept_eng" => "PicoGramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/mL", "synonym" => "ng/mL", "kind_of_quantity" => 41, "concept_eng" => "NanoGramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/mL{rbc}", "synonym" => "ng/mL RBCs", "kind_of_quantity" => 41, "concept_eng" => "NanoGramsPerMilliLiterRedBloodCells", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/mL", "synonym" => "ug/mL", "kind_of_quantity" => 41, "concept_eng" => "MicroGramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/mL", "synonym" => "mg/mL", "kind_of_quantity" => 41, "concept_eng" => "MilliGramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/mL", "synonym" => "g/mL", "kind_of_quantity" => 41, "concept_eng" => "GramsPerMilliLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pg/dL", "synonym" => "pg/dL", "kind_of_quantity" => 41, "concept_eng" => "PicoGramsPerDeciLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/dL", "synonym" => "ng/dL", "kind_of_quantity" => 41, "concept_eng" => "NanoGramsPerDeciLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/dL", "synonym" => "ug/dL", "kind_of_quantity" => 41, "concept_eng" => "MicroGramsPerDeciLiter", "dimension" => "0", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/dL{rbc}", "synonym" => "ug/dL RBCs", "kind_of_quantity" => 41, "concept_eng" => "MicroGramsPerDeciLiterRedBloodCells", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/dL", "synonym" => "mg/dL", "kind_of_quantity" => 41, "concept_eng" => "MilliGramsPerDeciLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg{Phenylketones}/dL", "synonym" => "mg Phe/dL", "kind_of_quantity" => 41, "concept_eng" => "MilliGramsPhenylketonesPerDeciLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/dL", "synonym" => "g/dL", "kind_of_quantity" => 41, "concept_eng" => "GramsPerDeciLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ng/L", "synonym" => "ng/L", "kind_of_quantity" => 41, "concept_eng" => "NanoGramsPerLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pg/L", "synonym" => "pg/L", "kind_of_quantity" => 41, "concept_eng" => "PicoGramsPerLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ug/L", "synonym" => "ug/L", "kind_of_quantity" => 41, "concept_eng" => "MicroGramsPerLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/L", "synonym" => "mg/L", "kind_of_quantity" => 41, "concept_eng" => "MilliGramsPerLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "g/L", "synonym" => "g/L", "kind_of_quantity" => 41, "concept_eng" => "GramsPerLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kg/L", "synonym" => "kg/L", "kind_of_quantity" => 41, "concept_eng" => "KiloGramsPerLiter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mg/m3", "synonym" => "mg/m^3", "kind_of_quantity" => 41, "concept_eng" => "MilliGramsPerCubicMeter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "kg/m3", "synonym" => "kg/m^3", "kind_of_quantity" => 41, "concept_eng" => "KiloGramsPerCubicMeter", "dimension" => "L-3M", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "fmol/mL", "synonym" => "fmol/mL", "kind_of_quantity" => 42, "concept_eng" => "FemtoMolesPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pmol/mL", "synonym" => "pmol/mL", "kind_of_quantity" => 42, "concept_eng" => "PicoMolesPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/mL", "synonym" => "nmol/mL", "kind_of_quantity" => 42, "concept_eng" => "NanoMolesPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/mL", "synonym" => "umol/mL", "kind_of_quantity" => 42, "concept_eng" => "MicroMolesPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mol/mL", "synonym" => "mol/mL", "kind_of_quantity" => 42, "concept_eng" => "MolesPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pmol/dL", "synonym" => "pmol/dL", "kind_of_quantity" => 42, "concept_eng" => "PicoMolesPerDeciLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/dL", "synonym" => "nmol/dL", "kind_of_quantity" => 42, "concept_eng" => "NanoMolesPerDeciLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/dL", "synonym" => "umol/dL", "kind_of_quantity" => 42, "concept_eng" => "MicroMolesPerDeciLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/dL", "synonym" => "mmol/dL", "kind_of_quantity" => 42, "concept_eng" => "MilliMolesPerDeciLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mmol/L", "synonym" => "mmol/L", "kind_of_quantity" => 42, "concept_eng" => "MilliMolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "pmol/L", "synonym" => "pmol/L", "kind_of_quantity" => 42, "concept_eng" => "PicoMolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "nmol/L", "synonym" => "nmol/L", "kind_of_quantity" => 42, "concept_eng" => "NanoMolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "umol/L", "synonym" => "umol/L", "kind_of_quantity" => 42, "concept_eng" => "MicroMolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mol/L", "synonym" => "mol/L", "kind_of_quantity" => 42, "concept_eng" => "MolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mol/m3", "synonym" => "mol/m^3", "kind_of_quantity" => 42, "concept_eng" => "MolesPerCubicMeter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ueq/mL", "synonym" => "ueq/mL", "kind_of_quantity" => 42, "concept_eng" => "MicroEquivalentsPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/mL", "synonym" => "meq/mL", "kind_of_quantity" => 42, "concept_eng" => "MilliEquivalentPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "eq/mL", "synonym" => "eq/mL", "kind_of_quantity" => 42, "concept_eng" => "EquivalentsPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{AHG}eq/mL", "synonym" => "AHG eq/mL", "kind_of_quantity" => 42, "concept_eng" => "AHGEquivalentsPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "10*6.eq/mL", "synonym" => "10^6 eq/mL", "kind_of_quantity" => 42, "concept_eng" => "MillionEquivalentsPerMilliLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "ueq/L", "synonym" => "ueg/L", "kind_of_quantity" => 42, "concept_eng" => "MicroEquivalentsPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/L", "synonym" => "meg/L", "kind_of_quantity" => 42, "concept_eng" => "MilliEquivalentsPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "eq/L", "synonym" => "eg/L", "kind_of_quantity" => 42, "concept_eng" => "EquivalentsPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "meq/dL", "synonym" => "meg/dL", "kind_of_quantity" => 42, "concept_eng" => "MilliEquivalentsPerDeciLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "mosm/L", "synonym" => "mOsm/L", "kind_of_quantity" => 42, "concept_eng" => "MilliOsmolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "osm/L", "synonym" => "Osm/L", "kind_of_quantity" => 42, "concept_eng" => "OsmolesPerLiter", "dimension" => "L-3N", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "u[iU]/mL", "synonym" => "uIU/mL", "kind_of_quantity" => 43, "concept_eng" => "MicroInternationalUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "m[iU]/mL", "synonym" => "mIU/mL", "kind_of_quantity" => 43, "concept_eng" => "MilliInternationalUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{IgGPhospholipid}U/mL", "synonym" => "IgG Phospholipid U/mL", "kind_of_quantity" => 43, "concept_eng" => "IgGPhospholipidUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{IgMPhospholipid}U/mL", "synonym" => "IgM Phospholipid U/mL", "kind_of_quantity" => 43, "concept_eng" => "IgMPhospholipidUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{ComplementCh50}U/mL", "synonym" => "CH50 U/mL", "kind_of_quantity" => 43, "concept_eng" => "ComplementCh50UnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{IgAPhospholipid}U/mL", "synonym" => "IgA Phospholipid U/mL", "kind_of_quantity" => 43, "concept_eng" => "IgAPhospholipidUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{Elisa_U}/mL", "synonym" => "Elisa U/mL", "kind_of_quantity" => 43, "concept_eng" => "ElisaUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[iU]/mL", "synonym" => "IU/mL", "kind_of_quantity" => 43, "concept_eng" => "InternationalUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "k[iU]/mL", "synonym" => "kIU/mL", "kind_of_quantity" => 43, "concept_eng" => "KiloInternationalUnitsPerMilliLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[iU]/dL", "synonym" => "IU/dL", "kind_of_quantity" => 43, "concept_eng" => "InternationalUnitsPerDeciLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "{Ehrlich_U}/dL", "synonym" => "EU/dL", "kind_of_quantity" => 43, "concept_eng" => "EhrlichUnitsPerDeciLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "m[iU]/L", "synonym" => "mIU/L", "kind_of_quantity" => 43, "concept_eng" => "MilliInternationalUnitsPerLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[iU]/L", "synonym" => "IU/L", "kind_of_quantity" => 43, "concept_eng" => "InternationalUnitsPerLiter", "dimension" => "L-3[arb]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);
$this->insert(self::TABLE_NAME, [ "code" => "[pH]", "synonym" => "pH", "kind_of_quantity" => 44, "concept_eng" => "pH", "dimension" => "[pH]", "status" => 5,  'created_at' => time(),  'updated_at' => time(),  'created_by' => 1,  'updated_by' =>1 ]);


        

    }
    
    public function safeDown()
    {
        $this->dropColumn('{{%'.self::TABLE_NAME.'}}', self::COL_3);
        $this->dropColumn('{{%'.self::TABLE_NAME.'}}', self::COL_4);
        $this->dropColumn('{{%'.self::TABLE_NAME.'}}', self::COL_5);
        $this->dropColumn('{{%'.self::TABLE_NAME.'}}', self::COL_6);
        $this->dropColumn('{{%'.self::TABLE_NAME.'}}', self::COL_7);
        $this->dropColumn('{{%'.self::TABLE_NAME.'}}', self::COL_8);

        $this->truncateTable('{{%'.self::TABLE_NAME.'}}');

    // add
    $this->addColumn('{{%'.self::TABLE_NAME.'}}', self::COL_1, $this->integer());
    $this->createIndex('index-'.self::TABLE_NAME.'-'.self::COL_1, '{{%'.self::TABLE_NAME.'}}', self::COL_1);
    $this->addForeignKey('fkey-'.self::TABLE_NAME.'-'.self::COL_1, '{{%'.self::TABLE_NAME.'}}', self::COL_1, '{{%'.self::FTABLE_NAME_1.'}}', 'id', 'CASCADE', 'CASCADE');
    
    // add
    $this->addColumn('{{%'.self::TABLE_NAME.'}}', self::COL_2, $this->integer());
    $this->createIndex('index-'.self::TABLE_NAME.'-'.self::COL_2, '{{%'.self::TABLE_NAME.'}}', self::COL_2);
    $this->addForeignKey('fkey-'.self::TABLE_NAME.'-'.self::COL_2, '{{%'.self::TABLE_NAME.'}}', self::COL_2, '{{%'.self::FTABLE_NAME_2.'}}', 'id', 'CASCADE', 'CASCADE');
    }

    /**
     * {@inheritdoc}
     */

    /*
    // Use up()/down() to run migration code without a transaction.
    public function up()
    {

    }

    public function down()
    {
        echo "m230810_022347_create_table_program_property cannot be reverted.\n";

        return false;
    }
    */
}
