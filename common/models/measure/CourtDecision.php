<?php

namespace common\models\measure;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use yiidreamteam\upload\FileUploadBehavior;

/**
 * This is the model class for table "court_decision".
 *
 * @property int $id
 * @property int $execution_id
 * @property int $court_id
 * @property int|null $decision_date
 * @property string|null $decision_file
 * @property int|null $fine_amount
 * @property int|null $paid_amount
 * @property int|null $paid_date
 * @property int|null $discont
 * @property int|null $paid_acount
 * @property string|null $comment
 * @property int $created_by
 * @property int $updated_by
 * @property int $created_at
 * @property int $updated_at
 *
 * @property CourtsName $court
 * @property User $createdBy
 * @property Executions $execution
 * @property User $updatedBy
 */
class CourtDecision extends \yii\db\ActiveRecord
{
    public $s_decision_file;
    public $fine_excist;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'court_decision';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['execution_id', 'court_id'], 'required'],
            [['execution_id', 'court_id','fine_amount', 'paid_amount', 'discont'], 'integer'],
            [['decision_file', 'comment','paid_date', 'decision_date', 'paid_acount' ], 'string', 'max' => 255],
            [['court_id'], 'exist', 'skipOnError' => true, 'targetClass' => CourtsName::class, 'targetAttribute' => ['court_id' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['created_by' => 'id']],
            [['execution_id'], 'exist', 'skipOnError' => true, 'targetClass' => Executions::class, 'targetAttribute' => ['execution_id' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['updated_by' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'execution_id' => 'Bayonnoma raqami',
            'court_id' => 'Sud nomi',
            'decision_date' => 'Qaror sanasi',
            'decision_file' => 'Qaror fayli',
            'fine_amount' => 'Jarima summasi',
            'paid_amount' => 'Jarima to\'langan summa',
            'paid_date' => 'Jarima to\'langan sana',
            'discont' => 'Chegirma',
            'paid_acount' => 'Jarima to\'langan xisob raqam',
            'comment' => 'Izoh',
            'fine_excist' => 'Sud qarori',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
            'created_at' => 'Yaratilgan sanasi',
            'updated_at' => 'Updated At',
        ];
    }
    public function beforeSave($insert)
    {
        if ($this->paid_acount) {
        $this->paid_acount = trim($this->paid_acount);
    }
        $this->paid_date = strtotime($this->paid_date);
        $this->decision_date = strtotime($this->decision_date);
        return true;
    }
    public function afterFind()
    {
        $this->decision_date = Yii::$app->formatter->asDate($this->decision_date, 'dd.MM.yyyy');
        $this->paid_date = Yii::$app->formatter->asDate($this->paid_date, 'dd.MM.yyyy');
        $this->created_at = Yii::$app->formatter->asDate($this->created_at, 'dd.MM.yyyy');
        parent::afterFind(); // TODO: Change the autogenerated stub
    }
    public function behaviors()
    {
        return [
            TimestampBehavior::class,
            BlameableBehavior::class,
            [
                'class' => FileUploadBehavior::class,
                'attribute' => 's_decision_file',
                'filePath' => '@webroot/uploads/executions/sud_qarorlari/[[pk]].[[extension]]',
                'fileUrl' => '/uploads/executions/sud_qarorlari/[[pk]].[[extension]]',
            ],
          
        ];
    }
    /**
     * Gets query for [[Court]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCourt()
    {
        return $this->hasOne(CourtsName::class, ['id' => 'court_id']);
    }

    /**
     * Gets query for [[CreatedBy]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(User::class, ['id' => 'created_by']);
    }

    /**
     * Gets query for [[Execution]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getExecution()
    {
        return $this->hasOne(Executions::class, ['id' => 'execution_id']);
    }

    /**
     * Gets query for [[UpdatedBy]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(User::class, ['id' => 'updated_by']);
    }
}
